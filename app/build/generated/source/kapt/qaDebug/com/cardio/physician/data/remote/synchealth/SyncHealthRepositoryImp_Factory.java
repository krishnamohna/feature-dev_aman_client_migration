// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.data.remote.synchealth;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SyncHealthRepositoryImp_Factory implements Factory<SyncHealthRepositoryImp> {
  private final Provider<FirebaseFirestore> fireStoreProvider;

  private final Provider<FirebaseAuth> firebaseAuthProvider;

  public SyncHealthRepositoryImp_Factory(Provider<FirebaseFirestore> fireStoreProvider,
      Provider<FirebaseAuth> firebaseAuthProvider) {
    this.fireStoreProvider = fireStoreProvider;
    this.firebaseAuthProvider = firebaseAuthProvider;
  }

  @Override
  public SyncHealthRepositoryImp get() {
    return newInstance(fireStoreProvider.get(), firebaseAuthProvider.get());
  }

  public static SyncHealthRepositoryImp_Factory create(
      Provider<FirebaseFirestore> fireStoreProvider, Provider<FirebaseAuth> firebaseAuthProvider) {
    return new SyncHealthRepositoryImp_Factory(fireStoreProvider, firebaseAuthProvider);
  }

  public static SyncHealthRepositoryImp newInstance(FirebaseFirestore fireStore,
      FirebaseAuth firebaseAuth) {
    return new SyncHealthRepositoryImp(fireStore, firebaseAuth);
  }
}
