// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.di;

import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideFirebaseStorageReferenceFactory implements Factory<StorageReference> {
  private final ApplicationModule module;

  private final Provider<FirebaseStorage> firebaseStorageProvider;

  public ApplicationModule_ProvideFirebaseStorageReferenceFactory(ApplicationModule module,
      Provider<FirebaseStorage> firebaseStorageProvider) {
    this.module = module;
    this.firebaseStorageProvider = firebaseStorageProvider;
  }

  @Override
  public StorageReference get() {
    return provideFirebaseStorageReference(module, firebaseStorageProvider.get());
  }

  public static ApplicationModule_ProvideFirebaseStorageReferenceFactory create(
      ApplicationModule module, Provider<FirebaseStorage> firebaseStorageProvider) {
    return new ApplicationModule_ProvideFirebaseStorageReferenceFactory(module, firebaseStorageProvider);
  }

  public static StorageReference provideFirebaseStorageReference(ApplicationModule instance,
      FirebaseStorage firebaseStorage) {
    return Preconditions.checkNotNullFromProvides(instance.provideFirebaseStorageReference(firebaseStorage));
  }
}
