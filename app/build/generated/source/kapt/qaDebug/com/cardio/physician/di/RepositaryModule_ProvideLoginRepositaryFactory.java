// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.di;

import com.cardio.physician.data.remote.login.LoginRepositoryImp;
import com.cardio.physician.domain.login.LoginRepositary;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositaryModule_ProvideLoginRepositaryFactory implements Factory<LoginRepositary> {
  private final RepositaryModule module;

  private final Provider<LoginRepositoryImp> loginRepositoryImpProvider;

  public RepositaryModule_ProvideLoginRepositaryFactory(RepositaryModule module,
      Provider<LoginRepositoryImp> loginRepositoryImpProvider) {
    this.module = module;
    this.loginRepositoryImpProvider = loginRepositoryImpProvider;
  }

  @Override
  public LoginRepositary get() {
    return provideLoginRepositary(module, loginRepositoryImpProvider.get());
  }

  public static RepositaryModule_ProvideLoginRepositaryFactory create(RepositaryModule module,
      Provider<LoginRepositoryImp> loginRepositoryImpProvider) {
    return new RepositaryModule_ProvideLoginRepositaryFactory(module, loginRepositoryImpProvider);
  }

  public static LoginRepositary provideLoginRepositary(RepositaryModule instance,
      LoginRepositoryImp loginRepositoryImp) {
    return Preconditions.checkNotNullFromProvides(instance.provideLoginRepositary(loginRepositoryImp));
  }
}
