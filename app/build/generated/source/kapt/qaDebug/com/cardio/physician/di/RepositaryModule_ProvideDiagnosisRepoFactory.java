// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.di;

import com.cardio.physician.data.remote.diagnosis.repositary.DiagnosisRepoImp;
import com.cardio.physician.domain.diagnosis.DiagnosisRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositaryModule_ProvideDiagnosisRepoFactory implements Factory<DiagnosisRepo> {
  private final RepositaryModule module;

  private final Provider<DiagnosisRepoImp> diagnosisRepoProvider;

  public RepositaryModule_ProvideDiagnosisRepoFactory(RepositaryModule module,
      Provider<DiagnosisRepoImp> diagnosisRepoProvider) {
    this.module = module;
    this.diagnosisRepoProvider = diagnosisRepoProvider;
  }

  @Override
  public DiagnosisRepo get() {
    return provideDiagnosisRepo(module, diagnosisRepoProvider.get());
  }

  public static RepositaryModule_ProvideDiagnosisRepoFactory create(RepositaryModule module,
      Provider<DiagnosisRepoImp> diagnosisRepoProvider) {
    return new RepositaryModule_ProvideDiagnosisRepoFactory(module, diagnosisRepoProvider);
  }

  public static DiagnosisRepo provideDiagnosisRepo(RepositaryModule instance,
      DiagnosisRepoImp diagnosisRepo) {
    return Preconditions.checkNotNullFromProvides(instance.provideDiagnosisRepo(diagnosisRepo));
  }
}
