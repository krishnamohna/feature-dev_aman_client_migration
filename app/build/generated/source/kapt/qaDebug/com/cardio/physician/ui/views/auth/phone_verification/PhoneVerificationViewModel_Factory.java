// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.ui.views.auth.phone_verification;

import android.app.Application;
import com.cardio.physician.data.local.UserManager;
import com.cardio.physician.data.remote.phoneverification.PhoneVerificationRepository;
import com.cardio.physician.data.remote.profile.UserProfileRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PhoneVerificationViewModel_Factory implements Factory<PhoneVerificationViewModel> {
  private final Provider<UserManager> userManagerProvider;

  private final Provider<UserProfileRepository> userProfileRepoProvider;

  private final Provider<PhoneVerificationRepository> phoneVerificationRepositoryProvider;

  private final Provider<Application> applicationProvider;

  public PhoneVerificationViewModel_Factory(Provider<UserManager> userManagerProvider,
      Provider<UserProfileRepository> userProfileRepoProvider,
      Provider<PhoneVerificationRepository> phoneVerificationRepositoryProvider,
      Provider<Application> applicationProvider) {
    this.userManagerProvider = userManagerProvider;
    this.userProfileRepoProvider = userProfileRepoProvider;
    this.phoneVerificationRepositoryProvider = phoneVerificationRepositoryProvider;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public PhoneVerificationViewModel get() {
    return newInstance(userManagerProvider.get(), userProfileRepoProvider.get(), phoneVerificationRepositoryProvider.get(), applicationProvider.get());
  }

  public static PhoneVerificationViewModel_Factory create(Provider<UserManager> userManagerProvider,
      Provider<UserProfileRepository> userProfileRepoProvider,
      Provider<PhoneVerificationRepository> phoneVerificationRepositoryProvider,
      Provider<Application> applicationProvider) {
    return new PhoneVerificationViewModel_Factory(userManagerProvider, userProfileRepoProvider, phoneVerificationRepositoryProvider, applicationProvider);
  }

  public static PhoneVerificationViewModel newInstance(UserManager userManager,
      UserProfileRepository userProfileRepo,
      PhoneVerificationRepository phoneVerificationRepository, Application application) {
    return new PhoneVerificationViewModel(userManager, userProfileRepo, phoneVerificationRepository, application);
  }
}
