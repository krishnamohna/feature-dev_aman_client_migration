// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.di;

import android.content.Context;
import com.cardio.physician.data.local.UserManager;
import com.cardio.physician.domain.fitness.FitnessRepositary;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositaryModule_ProvideFitnessRepositaryFactory implements Factory<FitnessRepositary> {
  private final RepositaryModule module;

  private final Provider<FitnessRepositary> fitBitRepoProvider;

  private final Provider<FitnessRepositary> googlefitBitRepoProvider;

  private final Provider<UserManager> userManagerProvider;

  private final Provider<Context> contextProvider;

  public RepositaryModule_ProvideFitnessRepositaryFactory(RepositaryModule module,
      Provider<FitnessRepositary> fitBitRepoProvider,
      Provider<FitnessRepositary> googlefitBitRepoProvider,
      Provider<UserManager> userManagerProvider, Provider<Context> contextProvider) {
    this.module = module;
    this.fitBitRepoProvider = fitBitRepoProvider;
    this.googlefitBitRepoProvider = googlefitBitRepoProvider;
    this.userManagerProvider = userManagerProvider;
    this.contextProvider = contextProvider;
  }

  @Override
  public FitnessRepositary get() {
    return provideFitnessRepositary(module, fitBitRepoProvider.get(), googlefitBitRepoProvider.get(), userManagerProvider.get(), contextProvider.get());
  }

  public static RepositaryModule_ProvideFitnessRepositaryFactory create(RepositaryModule module,
      Provider<FitnessRepositary> fitBitRepoProvider,
      Provider<FitnessRepositary> googlefitBitRepoProvider,
      Provider<UserManager> userManagerProvider, Provider<Context> contextProvider) {
    return new RepositaryModule_ProvideFitnessRepositaryFactory(module, fitBitRepoProvider, googlefitBitRepoProvider, userManagerProvider, contextProvider);
  }

  public static FitnessRepositary provideFitnessRepositary(RepositaryModule instance,
      FitnessRepositary fitBitRepo, FitnessRepositary googlefitBitRepo, UserManager userManager,
      Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideFitnessRepositary(fitBitRepo, googlefitBitRepo, userManager, context));
  }
}
