// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.di;

import com.cardio.physician.data.local.SharedPreferences;
import com.cardio.physician.data.local.UserManager;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_GetUserManagerFactory implements Factory<UserManager> {
  private final ApplicationModule module;

  private final Provider<SharedPreferences> sharedPreferencesProvider;

  public ApplicationModule_GetUserManagerFactory(ApplicationModule module,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    this.module = module;
    this.sharedPreferencesProvider = sharedPreferencesProvider;
  }

  @Override
  public UserManager get() {
    return getUserManager(module, sharedPreferencesProvider.get());
  }

  public static ApplicationModule_GetUserManagerFactory create(ApplicationModule module,
      Provider<SharedPreferences> sharedPreferencesProvider) {
    return new ApplicationModule_GetUserManagerFactory(module, sharedPreferencesProvider);
  }

  public static UserManager getUserManager(ApplicationModule instance,
      SharedPreferences sharedPreferences) {
    return Preconditions.checkNotNullFromProvides(instance.getUserManager(sharedPreferences));
  }
}
