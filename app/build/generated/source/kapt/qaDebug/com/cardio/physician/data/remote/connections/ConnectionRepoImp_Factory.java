// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.data.remote.connections;

import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.firestore.FirebaseFirestore;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ConnectionRepoImp_Factory implements Factory<ConnectionRepoImp> {
  private final Provider<FirebaseFirestore> fireStoreProvider;

  private final Provider<FirebaseAuth> firebaseAuthProvider;

  public ConnectionRepoImp_Factory(Provider<FirebaseFirestore> fireStoreProvider,
      Provider<FirebaseAuth> firebaseAuthProvider) {
    this.fireStoreProvider = fireStoreProvider;
    this.firebaseAuthProvider = firebaseAuthProvider;
  }

  @Override
  public ConnectionRepoImp get() {
    return newInstance(fireStoreProvider.get(), firebaseAuthProvider.get());
  }

  public static ConnectionRepoImp_Factory create(Provider<FirebaseFirestore> fireStoreProvider,
      Provider<FirebaseAuth> firebaseAuthProvider) {
    return new ConnectionRepoImp_Factory(fireStoreProvider, firebaseAuthProvider);
  }

  public static ConnectionRepoImp newInstance(FirebaseFirestore fireStore,
      FirebaseAuth firebaseAuth) {
    return new ConnectionRepoImp(fireStore, firebaseAuth);
  }
}
