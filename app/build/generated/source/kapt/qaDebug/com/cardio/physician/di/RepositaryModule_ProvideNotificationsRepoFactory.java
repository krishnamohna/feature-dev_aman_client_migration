// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.di;

import com.cardio.physician.data.remote.notifications.NotificationsRepoImp;
import com.cardio.physician.domain.notifications.NotificationRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositaryModule_ProvideNotificationsRepoFactory implements Factory<NotificationRepo> {
  private final RepositaryModule module;

  private final Provider<NotificationsRepoImp> notificationsRepoImpProvider;

  public RepositaryModule_ProvideNotificationsRepoFactory(RepositaryModule module,
      Provider<NotificationsRepoImp> notificationsRepoImpProvider) {
    this.module = module;
    this.notificationsRepoImpProvider = notificationsRepoImpProvider;
  }

  @Override
  public NotificationRepo get() {
    return provideNotificationsRepo(module, notificationsRepoImpProvider.get());
  }

  public static RepositaryModule_ProvideNotificationsRepoFactory create(RepositaryModule module,
      Provider<NotificationsRepoImp> notificationsRepoImpProvider) {
    return new RepositaryModule_ProvideNotificationsRepoFactory(module, notificationsRepoImpProvider);
  }

  public static NotificationRepo provideNotificationsRepo(RepositaryModule instance,
      NotificationsRepoImp notificationsRepoImp) {
    return Preconditions.checkNotNullFromProvides(instance.provideNotificationsRepo(notificationsRepoImp));
  }
}
