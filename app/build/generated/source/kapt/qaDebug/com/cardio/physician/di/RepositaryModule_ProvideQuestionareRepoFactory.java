// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.di;

import com.cardio.physician.data.remote.questionnaire.QuestionnaireRepoImp;
import com.cardio.physician.domain.questionare.QuestionnaireRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositaryModule_ProvideQuestionareRepoFactory implements Factory<QuestionnaireRepo> {
  private final RepositaryModule module;

  private final Provider<QuestionnaireRepoImp> questionnaireRepoImpProvider;

  public RepositaryModule_ProvideQuestionareRepoFactory(RepositaryModule module,
      Provider<QuestionnaireRepoImp> questionnaireRepoImpProvider) {
    this.module = module;
    this.questionnaireRepoImpProvider = questionnaireRepoImpProvider;
  }

  @Override
  public QuestionnaireRepo get() {
    return provideQuestionareRepo(module, questionnaireRepoImpProvider.get());
  }

  public static RepositaryModule_ProvideQuestionareRepoFactory create(RepositaryModule module,
      Provider<QuestionnaireRepoImp> questionnaireRepoImpProvider) {
    return new RepositaryModule_ProvideQuestionareRepoFactory(module, questionnaireRepoImpProvider);
  }

  public static QuestionnaireRepo provideQuestionareRepo(RepositaryModule instance,
      QuestionnaireRepoImp questionnaireRepoImp) {
    return Preconditions.checkNotNullFromProvides(instance.provideQuestionareRepo(questionnaireRepoImp));
  }
}
