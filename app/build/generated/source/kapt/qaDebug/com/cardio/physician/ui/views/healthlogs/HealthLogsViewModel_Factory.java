// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.ui.views.healthlogs;

import com.cardio.physician.domain.common.repository.UserAuthRepositary;
import com.cardio.physician.domain.synchealth.SyncHealthRepositary;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class HealthLogsViewModel_Factory implements Factory<HealthLogsViewModel> {
  private final Provider<SyncHealthRepositary> syncHealthRepositaryProvider;

  private final Provider<UserAuthRepositary> userAuthRepositaryProvider;

  public HealthLogsViewModel_Factory(Provider<SyncHealthRepositary> syncHealthRepositaryProvider,
      Provider<UserAuthRepositary> userAuthRepositaryProvider) {
    this.syncHealthRepositaryProvider = syncHealthRepositaryProvider;
    this.userAuthRepositaryProvider = userAuthRepositaryProvider;
  }

  @Override
  public HealthLogsViewModel get() {
    return newInstance(syncHealthRepositaryProvider.get(), userAuthRepositaryProvider.get());
  }

  public static HealthLogsViewModel_Factory create(
      Provider<SyncHealthRepositary> syncHealthRepositaryProvider,
      Provider<UserAuthRepositary> userAuthRepositaryProvider) {
    return new HealthLogsViewModel_Factory(syncHealthRepositaryProvider, userAuthRepositaryProvider);
  }

  public static HealthLogsViewModel newInstance(SyncHealthRepositary syncHealthRepositary,
      UserAuthRepositary userAuthRepositary) {
    return new HealthLogsViewModel(syncHealthRepositary, userAuthRepositary);
  }
}
