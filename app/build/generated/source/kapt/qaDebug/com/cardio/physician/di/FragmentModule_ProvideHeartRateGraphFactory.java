// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.di;

import com.cardio.physician.ui.views.dashboard.common.graph.HeartRateMpChartGraphImp;
import com.cardio.physician.ui.views.dashboard.common.graph.base.HeartRateGraph;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FragmentModule_ProvideHeartRateGraphFactory implements Factory<HeartRateGraph> {
  private final FragmentModule module;

  private final Provider<HeartRateMpChartGraphImp> heartRateMpChartGraphImpProvider;

  public FragmentModule_ProvideHeartRateGraphFactory(FragmentModule module,
      Provider<HeartRateMpChartGraphImp> heartRateMpChartGraphImpProvider) {
    this.module = module;
    this.heartRateMpChartGraphImpProvider = heartRateMpChartGraphImpProvider;
  }

  @Override
  public HeartRateGraph get() {
    return provideHeartRateGraph(module, heartRateMpChartGraphImpProvider.get());
  }

  public static FragmentModule_ProvideHeartRateGraphFactory create(FragmentModule module,
      Provider<HeartRateMpChartGraphImp> heartRateMpChartGraphImpProvider) {
    return new FragmentModule_ProvideHeartRateGraphFactory(module, heartRateMpChartGraphImpProvider);
  }

  public static HeartRateGraph provideHeartRateGraph(FragmentModule instance,
      HeartRateMpChartGraphImp heartRateMpChartGraphImp) {
    return Preconditions.checkNotNullFromProvides(instance.provideHeartRateGraph(heartRateMpChartGraphImp));
  }
}
