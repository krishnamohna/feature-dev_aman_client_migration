// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.ui.views.auth.login;

import android.app.Application;
import com.cardio.physician.data.local.UserManager;
import com.cardio.physician.data.remote.profile.UserProfileRepository;
import com.cardio.physician.domain.login.LoginRepositary;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoginViewModel_Factory implements Factory<LoginViewModel> {
  private final Provider<UserManager> userManagerProvider;

  private final Provider<LoginRepositary> loginRepositoryProvider;

  private final Provider<UserProfileRepository> userProfileRepoProvider;

  private final Provider<Application> applicationProvider;

  public LoginViewModel_Factory(Provider<UserManager> userManagerProvider,
      Provider<LoginRepositary> loginRepositoryProvider,
      Provider<UserProfileRepository> userProfileRepoProvider,
      Provider<Application> applicationProvider) {
    this.userManagerProvider = userManagerProvider;
    this.loginRepositoryProvider = loginRepositoryProvider;
    this.userProfileRepoProvider = userProfileRepoProvider;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public LoginViewModel get() {
    return newInstance(userManagerProvider.get(), loginRepositoryProvider.get(), userProfileRepoProvider.get(), applicationProvider.get());
  }

  public static LoginViewModel_Factory create(Provider<UserManager> userManagerProvider,
      Provider<LoginRepositary> loginRepositoryProvider,
      Provider<UserProfileRepository> userProfileRepoProvider,
      Provider<Application> applicationProvider) {
    return new LoginViewModel_Factory(userManagerProvider, loginRepositoryProvider, userProfileRepoProvider, applicationProvider);
  }

  public static LoginViewModel newInstance(UserManager userManager, LoginRepositary loginRepository,
      UserProfileRepository userProfileRepo, Application application) {
    return new LoginViewModel(userManager, loginRepository, userProfileRepo, application);
  }
}
