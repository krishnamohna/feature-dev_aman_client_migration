// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.data.remote.fcm;

import android.content.Context;
import com.cardio.physician.data.local.UserManager;
import com.cardio.physician.domain.connection.ConnectionRepo;
import com.google.firebase.auth.FirebaseAuth;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import java.util.concurrent.ExecutorService;
import javax.inject.Provider;
import okhttp3.OkHttpClient;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FcmManager_Factory implements Factory<FcmManager> {
  private final Provider<Context> contextProvider;

  private final Provider<FirebaseAuth> firebaseAuthProvider;

  private final Provider<OkHttpClient> okHttpClientProvider;

  private final Provider<ExecutorService> executeServiceProvider;

  private final Provider<UserManager> userManagerProvider;

  private final Provider<ConnectionRepo> connectionRepoProvider;

  public FcmManager_Factory(Provider<Context> contextProvider,
      Provider<FirebaseAuth> firebaseAuthProvider, Provider<OkHttpClient> okHttpClientProvider,
      Provider<ExecutorService> executeServiceProvider, Provider<UserManager> userManagerProvider,
      Provider<ConnectionRepo> connectionRepoProvider) {
    this.contextProvider = contextProvider;
    this.firebaseAuthProvider = firebaseAuthProvider;
    this.okHttpClientProvider = okHttpClientProvider;
    this.executeServiceProvider = executeServiceProvider;
    this.userManagerProvider = userManagerProvider;
    this.connectionRepoProvider = connectionRepoProvider;
  }

  @Override
  public FcmManager get() {
    return newInstance(contextProvider.get(), firebaseAuthProvider.get(), okHttpClientProvider.get(), executeServiceProvider.get(), userManagerProvider.get(), connectionRepoProvider.get());
  }

  public static FcmManager_Factory create(Provider<Context> contextProvider,
      Provider<FirebaseAuth> firebaseAuthProvider, Provider<OkHttpClient> okHttpClientProvider,
      Provider<ExecutorService> executeServiceProvider, Provider<UserManager> userManagerProvider,
      Provider<ConnectionRepo> connectionRepoProvider) {
    return new FcmManager_Factory(contextProvider, firebaseAuthProvider, okHttpClientProvider, executeServiceProvider, userManagerProvider, connectionRepoProvider);
  }

  public static FcmManager newInstance(Context context, FirebaseAuth firebaseAuth,
      OkHttpClient okHttpClient, ExecutorService executeService, UserManager userManager,
      ConnectionRepo connectionRepo) {
    return new FcmManager(context, firebaseAuth, okHttpClient, executeService, userManager, connectionRepo);
  }
}
