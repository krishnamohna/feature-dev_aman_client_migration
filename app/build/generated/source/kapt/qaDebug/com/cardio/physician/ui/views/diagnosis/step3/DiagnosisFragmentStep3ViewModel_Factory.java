// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.ui.views.diagnosis.step3;

import com.cardio.physician.domain.connection.ConnectionRepo;
import com.cardio.physician.domain.diagnosis.DiagnosisRepo;
import com.cardio.physician.domain.notifications.NotificationRepo;
import com.cardio.physician.domain.questionare.QuestionnaireRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DiagnosisFragmentStep3ViewModel_Factory implements Factory<DiagnosisFragmentStep3ViewModel> {
  private final Provider<QuestionnaireRepo> questionnaireRepoProvider;

  private final Provider<DiagnosisRepo> diagnosisRepoProvider;

  private final Provider<ConnectionRepo> connectionRepoProvider;

  private final Provider<NotificationRepo> notificationRepoProvider;

  public DiagnosisFragmentStep3ViewModel_Factory(
      Provider<QuestionnaireRepo> questionnaireRepoProvider,
      Provider<DiagnosisRepo> diagnosisRepoProvider,
      Provider<ConnectionRepo> connectionRepoProvider,
      Provider<NotificationRepo> notificationRepoProvider) {
    this.questionnaireRepoProvider = questionnaireRepoProvider;
    this.diagnosisRepoProvider = diagnosisRepoProvider;
    this.connectionRepoProvider = connectionRepoProvider;
    this.notificationRepoProvider = notificationRepoProvider;
  }

  @Override
  public DiagnosisFragmentStep3ViewModel get() {
    return newInstance(questionnaireRepoProvider.get(), diagnosisRepoProvider.get(), connectionRepoProvider.get(), notificationRepoProvider.get());
  }

  public static DiagnosisFragmentStep3ViewModel_Factory create(
      Provider<QuestionnaireRepo> questionnaireRepoProvider,
      Provider<DiagnosisRepo> diagnosisRepoProvider,
      Provider<ConnectionRepo> connectionRepoProvider,
      Provider<NotificationRepo> notificationRepoProvider) {
    return new DiagnosisFragmentStep3ViewModel_Factory(questionnaireRepoProvider, diagnosisRepoProvider, connectionRepoProvider, notificationRepoProvider);
  }

  public static DiagnosisFragmentStep3ViewModel newInstance(QuestionnaireRepo questionnaireRepo,
      DiagnosisRepo diagnosisRepo, ConnectionRepo connectionRepo,
      NotificationRepo notificationRepo) {
    return new DiagnosisFragmentStep3ViewModel(questionnaireRepo, diagnosisRepo, connectionRepo, notificationRepo);
  }
}
