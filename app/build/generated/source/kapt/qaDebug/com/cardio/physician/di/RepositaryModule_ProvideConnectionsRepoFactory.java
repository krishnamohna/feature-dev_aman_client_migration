// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.di;

import com.cardio.physician.data.remote.connections.ConnectionRepoImp;
import com.cardio.physician.domain.connection.ConnectionRepo;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RepositaryModule_ProvideConnectionsRepoFactory implements Factory<ConnectionRepo> {
  private final RepositaryModule module;

  private final Provider<ConnectionRepoImp> connectionRepoImpProvider;

  public RepositaryModule_ProvideConnectionsRepoFactory(RepositaryModule module,
      Provider<ConnectionRepoImp> connectionRepoImpProvider) {
    this.module = module;
    this.connectionRepoImpProvider = connectionRepoImpProvider;
  }

  @Override
  public ConnectionRepo get() {
    return provideConnectionsRepo(module, connectionRepoImpProvider.get());
  }

  public static RepositaryModule_ProvideConnectionsRepoFactory create(RepositaryModule module,
      Provider<ConnectionRepoImp> connectionRepoImpProvider) {
    return new RepositaryModule_ProvideConnectionsRepoFactory(module, connectionRepoImpProvider);
  }

  public static ConnectionRepo provideConnectionsRepo(RepositaryModule instance,
      ConnectionRepoImp connectionRepoImp) {
    return Preconditions.checkNotNullFromProvides(instance.provideConnectionsRepo(connectionRepoImp));
  }
}
