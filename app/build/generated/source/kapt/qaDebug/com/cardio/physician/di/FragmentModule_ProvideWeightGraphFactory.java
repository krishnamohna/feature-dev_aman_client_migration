// Generated by Dagger (https://dagger.dev).
package com.cardio.physician.di;

import com.cardio.physician.ui.views.dashboard.common.graph.WeightMpChartGraphImp;
import com.cardio.physician.ui.views.dashboard.common.graph.base.WeightGraph;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class FragmentModule_ProvideWeightGraphFactory implements Factory<WeightGraph> {
  private final FragmentModule module;

  private final Provider<WeightMpChartGraphImp> weightMpChartGraphImpProvider;

  public FragmentModule_ProvideWeightGraphFactory(FragmentModule module,
      Provider<WeightMpChartGraphImp> weightMpChartGraphImpProvider) {
    this.module = module;
    this.weightMpChartGraphImpProvider = weightMpChartGraphImpProvider;
  }

  @Override
  public WeightGraph get() {
    return provideWeightGraph(module, weightMpChartGraphImpProvider.get());
  }

  public static FragmentModule_ProvideWeightGraphFactory create(FragmentModule module,
      Provider<WeightMpChartGraphImp> weightMpChartGraphImpProvider) {
    return new FragmentModule_ProvideWeightGraphFactory(module, weightMpChartGraphImpProvider);
  }

  public static WeightGraph provideWeightGraph(FragmentModule instance,
      WeightMpChartGraphImp weightMpChartGraphImp) {
    return Preconditions.checkNotNullFromProvides(instance.provideWeightGraph(weightMpChartGraphImp));
  }
}
