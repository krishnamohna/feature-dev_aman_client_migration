// Generated by view binder compiler. Do not edit!
package com.cardio.physician.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RadioGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.viewbinding.ViewBinding;
import com.cardio.physician.R;
import com.google.android.material.radiobutton.MaterialRadioButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class CompoundQuestionType4LayoutBinding implements ViewBinding {
  @NonNull
  private final LinearLayoutCompat rootView;

  @NonNull
  public final RadioGroup radioGroupType4;

  @NonNull
  public final MaterialRadioButton rbOption1;

  @NonNull
  public final MaterialRadioButton rbOption2;

  @NonNull
  public final MaterialRadioButton rbOption3;

  @NonNull
  public final MaterialRadioButton rbOption4;

  @NonNull
  public final ScrollView scrollView;

  @NonNull
  public final TextView tvQuestionType4;

  private CompoundQuestionType4LayoutBinding(@NonNull LinearLayoutCompat rootView,
      @NonNull RadioGroup radioGroupType4, @NonNull MaterialRadioButton rbOption1,
      @NonNull MaterialRadioButton rbOption2, @NonNull MaterialRadioButton rbOption3,
      @NonNull MaterialRadioButton rbOption4, @NonNull ScrollView scrollView,
      @NonNull TextView tvQuestionType4) {
    this.rootView = rootView;
    this.radioGroupType4 = radioGroupType4;
    this.rbOption1 = rbOption1;
    this.rbOption2 = rbOption2;
    this.rbOption3 = rbOption3;
    this.rbOption4 = rbOption4;
    this.scrollView = scrollView;
    this.tvQuestionType4 = tvQuestionType4;
  }

  @Override
  @NonNull
  public LinearLayoutCompat getRoot() {
    return rootView;
  }

  @NonNull
  public static CompoundQuestionType4LayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static CompoundQuestionType4LayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.compound_question_type_4_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static CompoundQuestionType4LayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.radioGroupType4;
      RadioGroup radioGroupType4 = rootView.findViewById(id);
      if (radioGroupType4 == null) {
        break missingId;
      }

      id = R.id.rbOption1;
      MaterialRadioButton rbOption1 = rootView.findViewById(id);
      if (rbOption1 == null) {
        break missingId;
      }

      id = R.id.rbOption2;
      MaterialRadioButton rbOption2 = rootView.findViewById(id);
      if (rbOption2 == null) {
        break missingId;
      }

      id = R.id.rbOption3;
      MaterialRadioButton rbOption3 = rootView.findViewById(id);
      if (rbOption3 == null) {
        break missingId;
      }

      id = R.id.rbOption4;
      MaterialRadioButton rbOption4 = rootView.findViewById(id);
      if (rbOption4 == null) {
        break missingId;
      }

      id = R.id.scrollView;
      ScrollView scrollView = rootView.findViewById(id);
      if (scrollView == null) {
        break missingId;
      }

      id = R.id.tvQuestionType4;
      TextView tvQuestionType4 = rootView.findViewById(id);
      if (tvQuestionType4 == null) {
        break missingId;
      }

      return new CompoundQuestionType4LayoutBinding((LinearLayoutCompat) rootView, radioGroupType4,
          rbOption1, rbOption2, rbOption3, rbOption4, scrollView, tvQuestionType4);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
