// Generated by data binding compiler. Do not edit!
package com.cardio.physician.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.SwitchCompat;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.cardio.physician.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentSettingBinding extends ViewDataBinding {
  @NonNull
  public final ConstraintLayout aboutUsContainer;

  @NonNull
  public final AppCompatTextView appVersion;

  @NonNull
  public final ConstraintLayout changePasswordContainer;

  @NonNull
  public final ConstraintLayout enablePasscodeContainer;

  @NonNull
  public final ConstraintLayout faqContainer;

  @NonNull
  public final ToolbarBinding headerView;

  @NonNull
  public final AppCompatImageView imgAbout;

  @NonNull
  public final AppCompatImageView imgChangePassword;

  @NonNull
  public final AppCompatImageView imgEnablePasscode;

  @NonNull
  public final AppCompatImageView imgFaq;

  @NonNull
  public final AppCompatImageView imgFaqNext;

  @NonNull
  public final AppCompatImageView imgForwardChangePassword;

  @NonNull
  public final AppCompatImageView imgForwardChangePin;

  @NonNull
  public final AppCompatImageView imgLogout;

  @NonNull
  public final AppCompatImageView imgTermsAndCondition;

  @NonNull
  public final AppCompatImageView imgTermsAndConditionForward;

  @NonNull
  public final ConstraintLayout logoutContainer;

  @NonNull
  public final SwitchCompat switchNotification;

  @NonNull
  public final ConstraintLayout termsAndConditionContainer;

  @NonNull
  public final AppCompatTextView txtAbout;

  @NonNull
  public final AppCompatTextView txtChangePasswordTitle;

  @NonNull
  public final AppCompatTextView txtEnablePasscodeTitle;

  @NonNull
  public final AppCompatTextView txtFaqTitle;

  @NonNull
  public final AppCompatTextView txtLogout;

  @NonNull
  public final AppCompatTextView txtTermsAndConditionTitle;

  protected FragmentSettingBinding(Object _bindingComponent, View _root, int _localFieldCount,
      ConstraintLayout aboutUsContainer, AppCompatTextView appVersion,
      ConstraintLayout changePasswordContainer, ConstraintLayout enablePasscodeContainer,
      ConstraintLayout faqContainer, ToolbarBinding headerView, AppCompatImageView imgAbout,
      AppCompatImageView imgChangePassword, AppCompatImageView imgEnablePasscode,
      AppCompatImageView imgFaq, AppCompatImageView imgFaqNext,
      AppCompatImageView imgForwardChangePassword, AppCompatImageView imgForwardChangePin,
      AppCompatImageView imgLogout, AppCompatImageView imgTermsAndCondition,
      AppCompatImageView imgTermsAndConditionForward, ConstraintLayout logoutContainer,
      SwitchCompat switchNotification, ConstraintLayout termsAndConditionContainer,
      AppCompatTextView txtAbout, AppCompatTextView txtChangePasswordTitle,
      AppCompatTextView txtEnablePasscodeTitle, AppCompatTextView txtFaqTitle,
      AppCompatTextView txtLogout, AppCompatTextView txtTermsAndConditionTitle) {
    super(_bindingComponent, _root, _localFieldCount);
    this.aboutUsContainer = aboutUsContainer;
    this.appVersion = appVersion;
    this.changePasswordContainer = changePasswordContainer;
    this.enablePasscodeContainer = enablePasscodeContainer;
    this.faqContainer = faqContainer;
    this.headerView = headerView;
    this.imgAbout = imgAbout;
    this.imgChangePassword = imgChangePassword;
    this.imgEnablePasscode = imgEnablePasscode;
    this.imgFaq = imgFaq;
    this.imgFaqNext = imgFaqNext;
    this.imgForwardChangePassword = imgForwardChangePassword;
    this.imgForwardChangePin = imgForwardChangePin;
    this.imgLogout = imgLogout;
    this.imgTermsAndCondition = imgTermsAndCondition;
    this.imgTermsAndConditionForward = imgTermsAndConditionForward;
    this.logoutContainer = logoutContainer;
    this.switchNotification = switchNotification;
    this.termsAndConditionContainer = termsAndConditionContainer;
    this.txtAbout = txtAbout;
    this.txtChangePasswordTitle = txtChangePasswordTitle;
    this.txtEnablePasscodeTitle = txtEnablePasscodeTitle;
    this.txtFaqTitle = txtFaqTitle;
    this.txtLogout = txtLogout;
    this.txtTermsAndConditionTitle = txtTermsAndConditionTitle;
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_setting, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentSettingBinding>inflateInternal(inflater, R.layout.fragment_setting, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_setting, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentSettingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentSettingBinding>inflateInternal(inflater, R.layout.fragment_setting, null, false, component);
  }

  public static FragmentSettingBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentSettingBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentSettingBinding)bind(component, view, R.layout.fragment_setting);
  }
}
