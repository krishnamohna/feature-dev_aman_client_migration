// Generated by view binder compiler. Do not edit!
package com.cardio.physician.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.cardio.physician.R;
import com.google.android.material.card.MaterialCardView;
import com.google.android.material.textview.MaterialTextView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class BottomSheetImagePickerEditScreenBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final MaterialTextView tvAddImageLabel;

  @NonNull
  public final MaterialTextView tvPickImage;

  @NonNull
  public final MaterialTextView tvRemovePic;

  @NonNull
  public final MaterialTextView tvTakePic;

  private BottomSheetImagePickerEditScreenBinding(@NonNull MaterialCardView rootView,
      @NonNull MaterialTextView tvAddImageLabel, @NonNull MaterialTextView tvPickImage,
      @NonNull MaterialTextView tvRemovePic, @NonNull MaterialTextView tvTakePic) {
    this.rootView = rootView;
    this.tvAddImageLabel = tvAddImageLabel;
    this.tvPickImage = tvPickImage;
    this.tvRemovePic = tvRemovePic;
    this.tvTakePic = tvTakePic;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static BottomSheetImagePickerEditScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static BottomSheetImagePickerEditScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.bottom_sheet_image_picker_edit_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static BottomSheetImagePickerEditScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.tvAddImageLabel;
      MaterialTextView tvAddImageLabel = rootView.findViewById(id);
      if (tvAddImageLabel == null) {
        break missingId;
      }

      id = R.id.tvPickImage;
      MaterialTextView tvPickImage = rootView.findViewById(id);
      if (tvPickImage == null) {
        break missingId;
      }

      id = R.id.tvRemovePic;
      MaterialTextView tvRemovePic = rootView.findViewById(id);
      if (tvRemovePic == null) {
        break missingId;
      }

      id = R.id.tvTakePic;
      MaterialTextView tvTakePic = rootView.findViewById(id);
      if (tvTakePic == null) {
        break missingId;
      }

      return new BottomSheetImagePickerEditScreenBinding((MaterialCardView) rootView,
          tvAddImageLabel, tvPickImage, tvRemovePic, tvTakePic);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
