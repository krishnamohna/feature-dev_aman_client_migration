// Generated by view binder compiler. Do not edit!
package com.cardio.physician.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.HorizontalScrollView;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.ToggleButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.cardio.physician.R;
import com.cardio.physician.ui.views.textrecognization.GraphicOverlay;
import com.google.android.material.chip.ChipGroup;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityVisionCameraxLivePreviewBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ChipGroup chipGroupTextRecog;

  @NonNull
  public final LinearLayout control;

  @NonNull
  public final ToggleButton facingSwitch;

  @NonNull
  public final GraphicOverlay graphicOverlay;

  @NonNull
  public final ToolbarBinding headerView;

  @NonNull
  public final HorizontalScrollView horizontalScrollChipContainer;

  @NonNull
  public final PreviewView previewView;

  @NonNull
  public final SettingsStyleBinding settingsButton;

  @NonNull
  public final Spinner spinner;

  private ActivityVisionCameraxLivePreviewBinding(@NonNull ConstraintLayout rootView,
      @NonNull ChipGroup chipGroupTextRecog, @NonNull LinearLayout control,
      @NonNull ToggleButton facingSwitch, @NonNull GraphicOverlay graphicOverlay,
      @NonNull ToolbarBinding headerView,
      @NonNull HorizontalScrollView horizontalScrollChipContainer, @NonNull PreviewView previewView,
      @NonNull SettingsStyleBinding settingsButton, @NonNull Spinner spinner) {
    this.rootView = rootView;
    this.chipGroupTextRecog = chipGroupTextRecog;
    this.control = control;
    this.facingSwitch = facingSwitch;
    this.graphicOverlay = graphicOverlay;
    this.headerView = headerView;
    this.horizontalScrollChipContainer = horizontalScrollChipContainer;
    this.previewView = previewView;
    this.settingsButton = settingsButton;
    this.spinner = spinner;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityVisionCameraxLivePreviewBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityVisionCameraxLivePreviewBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_vision_camerax_live_preview, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityVisionCameraxLivePreviewBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.chipGroupTextRecog;
      ChipGroup chipGroupTextRecog = rootView.findViewById(id);
      if (chipGroupTextRecog == null) {
        break missingId;
      }

      id = R.id.control;
      LinearLayout control = rootView.findViewById(id);
      if (control == null) {
        break missingId;
      }

      id = R.id.facing_switch;
      ToggleButton facingSwitch = rootView.findViewById(id);
      if (facingSwitch == null) {
        break missingId;
      }

      id = R.id.graphic_overlay;
      GraphicOverlay graphicOverlay = rootView.findViewById(id);
      if (graphicOverlay == null) {
        break missingId;
      }

      id = R.id.headerView;
      View headerView = rootView.findViewById(id);
      if (headerView == null) {
        break missingId;
      }
      ToolbarBinding binding_headerView = ToolbarBinding.bind(headerView);

      id = R.id.horizontalScrollChipContainer;
      HorizontalScrollView horizontalScrollChipContainer = rootView.findViewById(id);
      if (horizontalScrollChipContainer == null) {
        break missingId;
      }

      id = R.id.preview_view;
      PreviewView previewView = rootView.findViewById(id);
      if (previewView == null) {
        break missingId;
      }

      id = R.id.settings_button;
      View settingsButton = rootView.findViewById(id);
      if (settingsButton == null) {
        break missingId;
      }
      SettingsStyleBinding binding_settingsButton = SettingsStyleBinding.bind(settingsButton);

      id = R.id.spinner;
      Spinner spinner = rootView.findViewById(id);
      if (spinner == null) {
        break missingId;
      }

      return new ActivityVisionCameraxLivePreviewBinding((ConstraintLayout) rootView,
          chipGroupTextRecog, control, facingSwitch, graphicOverlay, binding_headerView,
          horizontalScrollChipContainer, previewView, binding_settingsButton, spinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
